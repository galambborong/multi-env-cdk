name: Deploy basic CDK app

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read 

jobs:
  deploy_to_env1:
    runs-on: ubuntu-latest
    environment: env1
    # environment: env1
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - run: npm i

      # TODO - look into this a bit more and more
      # - name: Assume role using OIDC 
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:oidc-provider/token.actions.githubusercontent.com
      #     aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - run: npx cdk bootstrap -c config=${{ vars.ENVIRONMENT }}

      - run: npx cdk deploy --require-approval never -c config=${{ vars.ENVIRONMENT }}

  deploy_to_env2:
    needs: deploy_to_env1
    if: ${{ needs.deploy_to_env1.result == 'success' }}
    environment: env2
    runs-on: ubuntu-latest
    # environment: env1
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: 20

      - run: npm i

      # TODO - look into this a bit more and more
      # - name: Assume role using OIDC 
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:oidc-provider/token.actions.githubusercontent.com
      #     aws-region: ${{ vars.AWS_DEFAULT_REGION }}

      - run: npx cdk bootstrap -c config=${{ vars.ENVIRONMENT }}

      - run: npx cdk deploy --require-approval never -c config=${{ vars.ENVIRONMENT }}
